-- DT MODEL --
Number of experiments: 10
Best: 0.850000 using {'DT__criterion': 'gini', 'DT__max_depth': 3, 'DT__splitter': 'best'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.16218117624521255 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.45087486505508423 else to node 5.
		node=2 is a split node: go to node 3 if X[:, 12] <= -1.0761472582817078 else to node 4.
			node=3 is a leaf node.
			node=4 is a leaf node.
		node=5 is a split node: go to node 6 if X[:, 2] <= -0.001790553331375122 else to node 7.
			node=6 is a leaf node.
			node=7 is a leaf node.
	node=8 is a split node: go to node 9 if X[:, 1] <= 0.02331162430346012 else to node 10.
		node=9 is a leaf node.
		node=10 is a split node: go to node 11 if X[:, 1] <= 0.16361937671899796 else to node 12.
			node=11 is a leaf node.
			node=12 is a leaf node.
Best: 0.900000 using {'DT__criterion': 'entropy', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 5 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.1471959613263607 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.5756314694881439 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a leaf node.
Best: 0.875000 using {'DT__criterion': 'gini', 'DT__max_depth': 4, 'DT__splitter': 'best'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.15155315771698952 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.4172110855579376 else to node 5.
		node=2 is a split node: go to node 3 if X[:, 12] <= -1.0136837363243103 else to node 4.
			node=3 is a leaf node.
			node=4 is a leaf node.
		node=5 is a split node: go to node 6 if X[:, 2] <= -0.04330916702747345 else to node 7.
			node=6 is a leaf node.
			node=7 is a leaf node.
	node=8 is a split node: go to node 9 if X[:, 1] <= -0.02703644521534443 else to node 10.
		node=9 is a leaf node.
		node=10 is a split node: go to node 11 if X[:, 1] <= 0.11766570620238781 else to node 12.
			node=11 is a leaf node.
			node=12 is a leaf node.
Best: 0.937500 using {'DT__criterion': 'gini', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.17784376442432404 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.3962632715702057 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 7] <= 0.1970066800713539 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
Best: 0.887500 using {'DT__criterion': 'gini', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.09902403131127357 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.5311288833618164 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 14] <= -0.5859860479831696 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
Best: 0.900000 using {'DT__criterion': 'gini', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.06667542736977339 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.5003584027290344 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 7] <= 0.3319791257381439 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
Best: 0.795833 using {'DT__criterion': 'gini', 'DT__max_depth': 3, 'DT__splitter': 'random'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.5708571046758152 else to node 6.
	node=1 is a split node: go to node 2 if X[:, 13] <= -1.2310687869362464 else to node 3.
		node=2 is a leaf node.
		node=3 is a split node: go to node 4 if X[:, 2] <= -1.2622795365610524 else to node 5.
			node=4 is a leaf node.
			node=5 is a leaf node.
	node=6 is a split node: go to node 7 if X[:, 9] <= -0.1671815702041045 else to node 10.
		node=7 is a split node: go to node 8 if X[:, 2] <= -0.3954614282958402 else to node 9.
			node=8 is a leaf node.
			node=9 is a leaf node.
		node=10 is a split node: go to node 11 if X[:, 7] <= 0.2801944182125067 else to node 12.
			node=11 is a leaf node.
			node=12 is a leaf node.
Best: 0.833333 using {'DT__criterion': 'gini', 'DT__max_depth': 4, 'DT__splitter': 'best'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.16610855609178543 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.5107413679361343 else to node 5.
		node=2 is a split node: go to node 3 if X[:, 12] <= -1.026465356349945 else to node 4.
			node=3 is a leaf node.
			node=4 is a leaf node.
		node=5 is a split node: go to node 6 if X[:, 2] <= -0.2028006911277771 else to node 7.
			node=6 is a leaf node.
			node=7 is a leaf node.
	node=8 is a split node: go to node 9 if X[:, 7] <= 0.2730455994606018 else to node 12.
		node=9 is a split node: go to node 10 if X[:, 9] <= 0.23106126487255096 else to node 11.
			node=10 is a leaf node.
			node=11 is a leaf node.
		node=12 is a leaf node.
Best: 0.891667 using {'DT__criterion': 'gini', 'DT__max_depth': 3, 'DT__splitter': 'best'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.15544239804148674 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.476634219288826 else to node 5.
		node=2 is a split node: go to node 3 if X[:, 12] <= -1.0763280987739563 else to node 4.
			node=3 is a leaf node.
			node=4 is a leaf node.
		node=5 is a split node: go to node 6 if X[:, 2] <= -0.029115036129951477 else to node 7.
			node=6 is a leaf node.
			node=7 is a leaf node.
	node=8 is a split node: go to node 9 if X[:, 1] <= -0.16685345396399498 else to node 10.
		node=9 is a leaf node.
		node=10 is a split node: go to node 11 if X[:, 1] <= 0.13028369471430779 else to node 12.
			node=11 is a leaf node.
			node=12 is a leaf node.
Best: 0.858333 using {'DT__criterion': 'gini', 'DT__max_depth': 3, 'DT__splitter': 'best'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= -0.09480319917201996 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.5814818441867828 else to node 5.
		node=2 is a split node: go to node 3 if X[:, 12] <= -1.1287482976913452 else to node 4.
			node=3 is a leaf node.
			node=4 is a leaf node.
		node=5 is a split node: go to node 6 if X[:, 2] <= 0.04290151596069336 else to node 7.
			node=6 is a leaf node.
			node=7 is a leaf node.
	node=8 is a split node: go to node 9 if X[:, 1] <= -0.03723765816539526 else to node 10.
		node=9 is a leaf node.
		node=10 is a split node: go to node 11 if X[:, 1] <= 0.11833933088928461 else to node 12.
			node=11 is a leaf node.
			node=12 is a leaf node.
AUC = 0.8626086956521739