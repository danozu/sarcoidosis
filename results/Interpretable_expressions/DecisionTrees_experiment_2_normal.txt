-- DT MODEL --
Number of experiments: 10
Best: 0.841667 using {'DT__criterion': 'gini', 'DT__max_depth': 3, 'DT__splitter': 'best'}
The binary tree structure has 11 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= 0.16433963924646378 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 12] <= 0.6138881742954254 else to node 5.
		node=2 is a split node: go to node 3 if X[:, 5] <= 0.3588408827781677 else to node 4.
			node=3 is a leaf node.
			node=4 is a leaf node.
		node=5 is a split node: go to node 6 if X[:, 2] <= -0.053592175245285034 else to node 7.
			node=6 is a leaf node.
			node=7 is a leaf node.
	node=8 is a split node: go to node 9 if X[:, 14] <= -0.7471849322319031 else to node 10.
		node=9 is a leaf node.
		node=10 is a leaf node.
Best: 0.870833 using {'DT__criterion': 'gini', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 5 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.5105477571487427 else to node 2.
	node=1 is a leaf node.
	node=2 is a split node: go to node 3 if X[:, 14] <= -0.5812531411647797 else to node 4.
		node=3 is a leaf node.
		node=4 is a leaf node.
Best: 0.816667 using {'DT__criterion': 'entropy', 'DT__max_depth': 5, 'DT__splitter': 'best'}
The binary tree structure has 13 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.5505685806274414 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 3] <= -0.24619855172932148 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 4] <= -0.1227249950170517 else to node 6.
		node=5 is a leaf node.
		node=6 is a split node: go to node 7 if X[:, 4] <= 1.4787570238113403 else to node 12.
			node=7 is a split node: go to node 8 if X[:, 1] <= -0.41880425810813904 else to node 11.
				node=8 is a split node: go to node 9 if X[:, 14] <= -0.3841608166694641 else to node 10.
					node=9 is a leaf node.
					node=10 is a leaf node.
				node=11 is a leaf node.
			node=12 is a leaf node.
Best: 0.841667 using {'DT__criterion': 'entropy', 'DT__max_depth': 2, 'DT__splitter': 'random'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.2813138534460685 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 9] <= -0.10656779882909806 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 9] <= 0.20515116034250447 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
Best: 0.833333 using {'DT__criterion': 'entropy', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= 0.16267423331737518 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 13] <= -0.60773965716362 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 14] <= -0.7488162815570831 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
Best: 0.841667 using {'DT__criterion': 'entropy', 'DT__max_depth': 5, 'DT__splitter': 'random'}
The binary tree structure has 21 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.24316380809286586 else to node 10.
	node=1 is a split node: go to node 2 if X[:, 9] <= 0.5802536055155458 else to node 9.
		node=2 is a split node: go to node 3 if X[:, 10] <= 0.5855558620860215 else to node 8.
			node=3 is a split node: go to node 4 if X[:, 13] <= -0.5570271988633818 else to node 5.
				node=4 is a leaf node.
				node=5 is a split node: go to node 6 if X[:, 15] <= 0.30625320286048874 else to node 7.
					node=6 is a leaf node.
					node=7 is a leaf node.
			node=8 is a leaf node.
		node=9 is a leaf node.
	node=10 is a split node: go to node 11 if X[:, 0] <= 0.20753954769844718 else to node 12.
		node=11 is a leaf node.
		node=12 is a split node: go to node 13 if X[:, 7] <= 1.0680451243111477 else to node 20.
			node=13 is a split node: go to node 14 if X[:, 9] <= 0.11493718080083398 else to node 17.
				node=14 is a split node: go to node 15 if X[:, 9] <= -0.3305687086748013 else to node 16.
					node=15 is a leaf node.
					node=16 is a leaf node.
				node=17 is a split node: go to node 18 if X[:, 6] <= -1.2006690135051263 else to node 19.
					node=18 is a leaf node.
					node=19 is a leaf node.
			node=20 is a leaf node.
Best: 0.829167 using {'DT__criterion': 'entropy', 'DT__max_depth': 4, 'DT__splitter': 'random'}
The binary tree structure has 17 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.2733974191924694 else to node 10.
	node=1 is a split node: go to node 2 if X[:, 9] <= 0.44337336476954636 else to node 9.
		node=2 is a split node: go to node 3 if X[:, 3] <= -0.37401107507662357 else to node 6.
			node=3 is a split node: go to node 4 if X[:, 7] <= 0.7099495828242937 else to node 5.
				node=4 is a leaf node.
				node=5 is a leaf node.
			node=6 is a split node: go to node 7 if X[:, 15] <= -0.32111591192684147 else to node 8.
				node=7 is a leaf node.
				node=8 is a leaf node.
		node=9 is a leaf node.
	node=10 is a split node: go to node 11 if X[:, 10] <= -0.27348196973933736 else to node 12.
		node=11 is a leaf node.
		node=12 is a split node: go to node 13 if X[:, 7] <= 0.8898221512616029 else to node 16.
			node=13 is a split node: go to node 14 if X[:, 9] <= -0.025533251546414393 else to node 15.
				node=14 is a leaf node.
				node=15 is a leaf node.
			node=16 is a leaf node.
Best: 0.770833 using {'DT__criterion': 'entropy', 'DT__max_depth': 4, 'DT__splitter': 'best'}
The binary tree structure has 9 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 9] <= 0.2934175282716751 else to node 8.
	node=1 is a split node: go to node 2 if X[:, 13] <= -0.5169236063957214 else to node 3.
		node=2 is a leaf node.
		node=3 is a split node: go to node 4 if X[:, 2] <= -0.39232654869556427 else to node 5.
			node=4 is a leaf node.
			node=5 is a split node: go to node 6 if X[:, 12] <= -0.7241593599319458 else to node 7.
				node=6 is a leaf node.
				node=7 is a leaf node.
	node=8 is a leaf node.
Best: 0.770833 using {'DT__criterion': 'gini', 'DT__max_depth': 2, 'DT__splitter': 'random'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.2990542156455248 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 3] <= -0.12583561421217193 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 9] <= 0.1950010607549273 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
Best: 0.795833 using {'DT__criterion': 'gini', 'DT__max_depth': 2, 'DT__splitter': 'best'}
The binary tree structure has 7 nodes and has the following tree structure:

node=0 is a split node: go to node 1 if X[:, 13] <= -0.5613077282905579 else to node 4.
	node=1 is a split node: go to node 2 if X[:, 3] <= -0.25586771965026855 else to node 3.
		node=2 is a leaf node.
		node=3 is a leaf node.
	node=4 is a split node: go to node 5 if X[:, 7] <= -0.4328401982784271 else to node 6.
		node=5 is a leaf node.
		node=6 is a leaf node.
AUC = 0.7166666666666667
